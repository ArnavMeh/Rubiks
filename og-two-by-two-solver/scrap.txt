void Cube::TopCC() { // top counterclockwise
    int temp = positions[3];
    positions[3] = positions[0];
    positions[0] = positions[1];
    positions[1] = positions[2];
    positions[2] = temp;
}


void Cube::LeftCC() {
    int rCubes[4] = {4,7,3,0};
    int temp = positions[rCubes[0]];
    positions[rCubes[0]] = positions[rCubes[3]];
    positions[rCubes[3]] = positions[rCubes[2]];
    positions[rCubes[2]] = positions[rCubes[1]];
    positions[rCubes[1]] = temp;

    // orientations
    // 1 -> 0, 2 -> 1, 3 -> 2, 0 -> 3, 4 -> 4, 5 -> 5
    for (int i=0; i<4; i++) {
        if (orientations[positions[rCubes[i]]] < 4) {
            orientations[positions[rCubes[i]]] = (orientations[positions[rCubes[i]]]+3)%4;
        }
    }
}


void Cube::FrontCC() {
    int rCubes[4] = {7,6,2,3};
    int temp = positions[rCubes[0]];
    positions[rCubes[0]] = positions[rCubes[3]];
    positions[rCubes[3]] = positions[rCubes[2]];
    positions[rCubes[2]] = positions[rCubes[1]];
    positions[rCubes[1]] = temp;

    // orientations
    // 4 -> 0, 1 -> 1, 5 -> 2, 3 -> 3, 2 -> 4, 0 -> 5
    int orientDiff[6] = {5,1,4,3,0,2};
    for (int i=0; i<4; i++) {
        orientations[positions[rCubes[i]]] = orientDiff[orientations[positions[rCubes[i]]]];
    }
}